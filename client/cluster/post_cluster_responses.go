// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haproxytech/client-native/v5/models"
)

// PostClusterReader is a Reader for the PostCluster structure.
type PostClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPostClusterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostClusterOK creates a PostClusterOK with default headers values
func NewPostClusterOK() *PostClusterOK {
	return &PostClusterOK{}
}

/*
PostClusterOK describes a response with status code 200, with default header values.

Cluster settings changed
*/
type PostClusterOK struct {
	Payload *models.ClusterSettings
}

// IsSuccess returns true when this post cluster o k response has a 2xx status code
func (o *PostClusterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post cluster o k response has a 3xx status code
func (o *PostClusterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post cluster o k response has a 4xx status code
func (o *PostClusterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post cluster o k response has a 5xx status code
func (o *PostClusterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post cluster o k response a status code equal to that given
func (o *PostClusterOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post cluster o k response
func (o *PostClusterOK) Code() int {
	return 200
}

func (o *PostClusterOK) Error() string {
	return fmt.Sprintf("[POST /cluster][%d] postClusterOK  %+v", 200, o.Payload)
}

func (o *PostClusterOK) String() string {
	return fmt.Sprintf("[POST /cluster][%d] postClusterOK  %+v", 200, o.Payload)
}

func (o *PostClusterOK) GetPayload() *models.ClusterSettings {
	return o.Payload
}

func (o *PostClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClusterSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostClusterBadRequest creates a PostClusterBadRequest with default headers values
func NewPostClusterBadRequest() *PostClusterBadRequest {
	return &PostClusterBadRequest{}
}

/*
PostClusterBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PostClusterBadRequest struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this post cluster bad request response has a 2xx status code
func (o *PostClusterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post cluster bad request response has a 3xx status code
func (o *PostClusterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post cluster bad request response has a 4xx status code
func (o *PostClusterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post cluster bad request response has a 5xx status code
func (o *PostClusterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post cluster bad request response a status code equal to that given
func (o *PostClusterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post cluster bad request response
func (o *PostClusterBadRequest) Code() int {
	return 400
}

func (o *PostClusterBadRequest) Error() string {
	return fmt.Sprintf("[POST /cluster][%d] postClusterBadRequest  %+v", 400, o.Payload)
}

func (o *PostClusterBadRequest) String() string {
	return fmt.Sprintf("[POST /cluster][%d] postClusterBadRequest  %+v", 400, o.Payload)
}

func (o *PostClusterBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostClusterDefault creates a PostClusterDefault with default headers values
func NewPostClusterDefault(code int) *PostClusterDefault {
	return &PostClusterDefault{
		_statusCode: code,
	}
}

/*
PostClusterDefault describes a response with status code -1, with default header values.

General Error
*/
type PostClusterDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this post cluster default response has a 2xx status code
func (o *PostClusterDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this post cluster default response has a 3xx status code
func (o *PostClusterDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this post cluster default response has a 4xx status code
func (o *PostClusterDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this post cluster default response has a 5xx status code
func (o *PostClusterDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this post cluster default response a status code equal to that given
func (o *PostClusterDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the post cluster default response
func (o *PostClusterDefault) Code() int {
	return o._statusCode
}

func (o *PostClusterDefault) Error() string {
	return fmt.Sprintf("[POST /cluster][%d] postCluster default  %+v", o._statusCode, o.Payload)
}

func (o *PostClusterDefault) String() string {
	return fmt.Sprintf("[POST /cluster][%d] postCluster default  %+v", o._statusCode, o.Payload)
}

func (o *PostClusterDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostClusterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
