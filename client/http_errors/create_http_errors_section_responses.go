// Code generated by go-swagger; DO NOT EDIT.

package http_errors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haproxytech/client-native/v4/models"
)

// CreateHTTPErrorsSectionReader is a Reader for the CreateHTTPErrorsSection structure.
type CreateHTTPErrorsSectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateHTTPErrorsSectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateHTTPErrorsSectionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewCreateHTTPErrorsSectionAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateHTTPErrorsSectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateHTTPErrorsSectionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateHTTPErrorsSectionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateHTTPErrorsSectionCreated creates a CreateHTTPErrorsSectionCreated with default headers values
func NewCreateHTTPErrorsSectionCreated() *CreateHTTPErrorsSectionCreated {
	return &CreateHTTPErrorsSectionCreated{}
}

/*
CreateHTTPErrorsSectionCreated describes a response with status code 201, with default header values.

http-error section created
*/
type CreateHTTPErrorsSectionCreated struct {
	Payload *models.HTTPErrorsSection
}

// IsSuccess returns true when this create Http errors section created response has a 2xx status code
func (o *CreateHTTPErrorsSectionCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create Http errors section created response has a 3xx status code
func (o *CreateHTTPErrorsSectionCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Http errors section created response has a 4xx status code
func (o *CreateHTTPErrorsSectionCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Http errors section created response has a 5xx status code
func (o *CreateHTTPErrorsSectionCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create Http errors section created response a status code equal to that given
func (o *CreateHTTPErrorsSectionCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateHTTPErrorsSectionCreated) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/http_errors_sections][%d] createHttpErrorsSectionCreated  %+v", 201, o.Payload)
}

func (o *CreateHTTPErrorsSectionCreated) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/http_errors_sections][%d] createHttpErrorsSectionCreated  %+v", 201, o.Payload)
}

func (o *CreateHTTPErrorsSectionCreated) GetPayload() *models.HTTPErrorsSection {
	return o.Payload
}

func (o *CreateHTTPErrorsSectionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPErrorsSection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHTTPErrorsSectionAccepted creates a CreateHTTPErrorsSectionAccepted with default headers values
func NewCreateHTTPErrorsSectionAccepted() *CreateHTTPErrorsSectionAccepted {
	return &CreateHTTPErrorsSectionAccepted{}
}

/*
CreateHTTPErrorsSectionAccepted describes a response with status code 202, with default header values.

Configuration change accepted and reload requested
*/
type CreateHTTPErrorsSectionAccepted struct {

	/* ID of the requested reload
	 */
	ReloadID string

	Payload *models.HTTPErrorsSection
}

// IsSuccess returns true when this create Http errors section accepted response has a 2xx status code
func (o *CreateHTTPErrorsSectionAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create Http errors section accepted response has a 3xx status code
func (o *CreateHTTPErrorsSectionAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Http errors section accepted response has a 4xx status code
func (o *CreateHTTPErrorsSectionAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Http errors section accepted response has a 5xx status code
func (o *CreateHTTPErrorsSectionAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this create Http errors section accepted response a status code equal to that given
func (o *CreateHTTPErrorsSectionAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *CreateHTTPErrorsSectionAccepted) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/http_errors_sections][%d] createHttpErrorsSectionAccepted  %+v", 202, o.Payload)
}

func (o *CreateHTTPErrorsSectionAccepted) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/http_errors_sections][%d] createHttpErrorsSectionAccepted  %+v", 202, o.Payload)
}

func (o *CreateHTTPErrorsSectionAccepted) GetPayload() *models.HTTPErrorsSection {
	return o.Payload
}

func (o *CreateHTTPErrorsSectionAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Reload-ID
	hdrReloadID := response.GetHeader("Reload-ID")

	if hdrReloadID != "" {
		o.ReloadID = hdrReloadID
	}

	o.Payload = new(models.HTTPErrorsSection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHTTPErrorsSectionBadRequest creates a CreateHTTPErrorsSectionBadRequest with default headers values
func NewCreateHTTPErrorsSectionBadRequest() *CreateHTTPErrorsSectionBadRequest {
	return &CreateHTTPErrorsSectionBadRequest{}
}

/*
CreateHTTPErrorsSectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateHTTPErrorsSectionBadRequest struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this create Http errors section bad request response has a 2xx status code
func (o *CreateHTTPErrorsSectionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Http errors section bad request response has a 3xx status code
func (o *CreateHTTPErrorsSectionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Http errors section bad request response has a 4xx status code
func (o *CreateHTTPErrorsSectionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create Http errors section bad request response has a 5xx status code
func (o *CreateHTTPErrorsSectionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create Http errors section bad request response a status code equal to that given
func (o *CreateHTTPErrorsSectionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateHTTPErrorsSectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/http_errors_sections][%d] createHttpErrorsSectionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateHTTPErrorsSectionBadRequest) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/http_errors_sections][%d] createHttpErrorsSectionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateHTTPErrorsSectionBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateHTTPErrorsSectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHTTPErrorsSectionConflict creates a CreateHTTPErrorsSectionConflict with default headers values
func NewCreateHTTPErrorsSectionConflict() *CreateHTTPErrorsSectionConflict {
	return &CreateHTTPErrorsSectionConflict{}
}

/*
CreateHTTPErrorsSectionConflict describes a response with status code 409, with default header values.

The specified resource already exists
*/
type CreateHTTPErrorsSectionConflict struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this create Http errors section conflict response has a 2xx status code
func (o *CreateHTTPErrorsSectionConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Http errors section conflict response has a 3xx status code
func (o *CreateHTTPErrorsSectionConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Http errors section conflict response has a 4xx status code
func (o *CreateHTTPErrorsSectionConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create Http errors section conflict response has a 5xx status code
func (o *CreateHTTPErrorsSectionConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create Http errors section conflict response a status code equal to that given
func (o *CreateHTTPErrorsSectionConflict) IsCode(code int) bool {
	return code == 409
}

func (o *CreateHTTPErrorsSectionConflict) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/http_errors_sections][%d] createHttpErrorsSectionConflict  %+v", 409, o.Payload)
}

func (o *CreateHTTPErrorsSectionConflict) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/http_errors_sections][%d] createHttpErrorsSectionConflict  %+v", 409, o.Payload)
}

func (o *CreateHTTPErrorsSectionConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateHTTPErrorsSectionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHTTPErrorsSectionDefault creates a CreateHTTPErrorsSectionDefault with default headers values
func NewCreateHTTPErrorsSectionDefault(code int) *CreateHTTPErrorsSectionDefault {
	return &CreateHTTPErrorsSectionDefault{
		_statusCode: code,
	}
}

/*
CreateHTTPErrorsSectionDefault describes a response with status code -1, with default header values.

General Error
*/
type CreateHTTPErrorsSectionDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// Code gets the status code for the create HTTP errors section default response
func (o *CreateHTTPErrorsSectionDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this create HTTP errors section default response has a 2xx status code
func (o *CreateHTTPErrorsSectionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create HTTP errors section default response has a 3xx status code
func (o *CreateHTTPErrorsSectionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create HTTP errors section default response has a 4xx status code
func (o *CreateHTTPErrorsSectionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create HTTP errors section default response has a 5xx status code
func (o *CreateHTTPErrorsSectionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create HTTP errors section default response a status code equal to that given
func (o *CreateHTTPErrorsSectionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *CreateHTTPErrorsSectionDefault) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/http_errors_sections][%d] createHTTPErrorsSection default  %+v", o._statusCode, o.Payload)
}

func (o *CreateHTTPErrorsSectionDefault) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/http_errors_sections][%d] createHTTPErrorsSection default  %+v", o._statusCode, o.Payload)
}

func (o *CreateHTTPErrorsSectionDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateHTTPErrorsSectionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
