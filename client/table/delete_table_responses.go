// Code generated by go-swagger; DO NOT EDIT.

package table

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haproxytech/client-native/v5/models"
)

// DeleteTableReader is a Reader for the DeleteTable structure.
type DeleteTableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewDeleteTableAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteTableNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteTableNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteTableDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteTableAccepted creates a DeleteTableAccepted with default headers values
func NewDeleteTableAccepted() *DeleteTableAccepted {
	return &DeleteTableAccepted{}
}

/*
DeleteTableAccepted describes a response with status code 202, with default header values.

Configuration change accepted and reload requested
*/
type DeleteTableAccepted struct {

	/* ID of the requested reload
	 */
	ReloadID string
}

// IsSuccess returns true when this delete table accepted response has a 2xx status code
func (o *DeleteTableAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete table accepted response has a 3xx status code
func (o *DeleteTableAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete table accepted response has a 4xx status code
func (o *DeleteTableAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete table accepted response has a 5xx status code
func (o *DeleteTableAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this delete table accepted response a status code equal to that given
func (o *DeleteTableAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the delete table accepted response
func (o *DeleteTableAccepted) Code() int {
	return 202
}

func (o *DeleteTableAccepted) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/tables/{name}][%d] deleteTableAccepted ", 202)
}

func (o *DeleteTableAccepted) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/tables/{name}][%d] deleteTableAccepted ", 202)
}

func (o *DeleteTableAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Reload-ID
	hdrReloadID := response.GetHeader("Reload-ID")

	if hdrReloadID != "" {
		o.ReloadID = hdrReloadID
	}

	return nil
}

// NewDeleteTableNoContent creates a DeleteTableNoContent with default headers values
func NewDeleteTableNoContent() *DeleteTableNoContent {
	return &DeleteTableNoContent{}
}

/*
DeleteTableNoContent describes a response with status code 204, with default header values.

Table deleted
*/
type DeleteTableNoContent struct {
}

// IsSuccess returns true when this delete table no content response has a 2xx status code
func (o *DeleteTableNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete table no content response has a 3xx status code
func (o *DeleteTableNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete table no content response has a 4xx status code
func (o *DeleteTableNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete table no content response has a 5xx status code
func (o *DeleteTableNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete table no content response a status code equal to that given
func (o *DeleteTableNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete table no content response
func (o *DeleteTableNoContent) Code() int {
	return 204
}

func (o *DeleteTableNoContent) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/tables/{name}][%d] deleteTableNoContent ", 204)
}

func (o *DeleteTableNoContent) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/tables/{name}][%d] deleteTableNoContent ", 204)
}

func (o *DeleteTableNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTableNotFound creates a DeleteTableNotFound with default headers values
func NewDeleteTableNotFound() *DeleteTableNotFound {
	return &DeleteTableNotFound{}
}

/*
DeleteTableNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type DeleteTableNotFound struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this delete table not found response has a 2xx status code
func (o *DeleteTableNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete table not found response has a 3xx status code
func (o *DeleteTableNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete table not found response has a 4xx status code
func (o *DeleteTableNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete table not found response has a 5xx status code
func (o *DeleteTableNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete table not found response a status code equal to that given
func (o *DeleteTableNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete table not found response
func (o *DeleteTableNotFound) Code() int {
	return 404
}

func (o *DeleteTableNotFound) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/tables/{name}][%d] deleteTableNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTableNotFound) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/tables/{name}][%d] deleteTableNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTableNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTableNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTableDefault creates a DeleteTableDefault with default headers values
func NewDeleteTableDefault(code int) *DeleteTableDefault {
	return &DeleteTableDefault{
		_statusCode: code,
	}
}

/*
DeleteTableDefault describes a response with status code -1, with default header values.

General Error
*/
type DeleteTableDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this delete table default response has a 2xx status code
func (o *DeleteTableDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete table default response has a 3xx status code
func (o *DeleteTableDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete table default response has a 4xx status code
func (o *DeleteTableDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete table default response has a 5xx status code
func (o *DeleteTableDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete table default response a status code equal to that given
func (o *DeleteTableDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete table default response
func (o *DeleteTableDefault) Code() int {
	return o._statusCode
}

func (o *DeleteTableDefault) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/tables/{name}][%d] deleteTable default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteTableDefault) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/tables/{name}][%d] deleteTable default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteTableDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTableDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
