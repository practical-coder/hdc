// Code generated by go-swagger; DO NOT EDIT.

package spoe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haproxytech/client-native/v4/models"
)

// GetAllSpoeFilesReader is a Reader for the GetAllSpoeFiles structure.
type GetAllSpoeFilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllSpoeFilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllSpoeFilesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetAllSpoeFilesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetAllSpoeFilesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetAllSpoeFilesOK creates a GetAllSpoeFilesOK with default headers values
func NewGetAllSpoeFilesOK() *GetAllSpoeFilesOK {
	return &GetAllSpoeFilesOK{}
}

/*
GetAllSpoeFilesOK describes a response with status code 200, with default header values.

Successful operation
*/
type GetAllSpoeFilesOK struct {
	Payload models.SpoeFiles
}

// IsSuccess returns true when this get all spoe files o k response has a 2xx status code
func (o *GetAllSpoeFilesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all spoe files o k response has a 3xx status code
func (o *GetAllSpoeFilesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all spoe files o k response has a 4xx status code
func (o *GetAllSpoeFilesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all spoe files o k response has a 5xx status code
func (o *GetAllSpoeFilesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all spoe files o k response a status code equal to that given
func (o *GetAllSpoeFilesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAllSpoeFilesOK) Error() string {
	return fmt.Sprintf("[GET /services/haproxy/spoe/spoe_files][%d] getAllSpoeFilesOK  %+v", 200, o.Payload)
}

func (o *GetAllSpoeFilesOK) String() string {
	return fmt.Sprintf("[GET /services/haproxy/spoe/spoe_files][%d] getAllSpoeFilesOK  %+v", 200, o.Payload)
}

func (o *GetAllSpoeFilesOK) GetPayload() models.SpoeFiles {
	return o.Payload
}

func (o *GetAllSpoeFilesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllSpoeFilesNotFound creates a GetAllSpoeFilesNotFound with default headers values
func NewGetAllSpoeFilesNotFound() *GetAllSpoeFilesNotFound {
	return &GetAllSpoeFilesNotFound{}
}

/*
GetAllSpoeFilesNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type GetAllSpoeFilesNotFound struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this get all spoe files not found response has a 2xx status code
func (o *GetAllSpoeFilesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all spoe files not found response has a 3xx status code
func (o *GetAllSpoeFilesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all spoe files not found response has a 4xx status code
func (o *GetAllSpoeFilesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all spoe files not found response has a 5xx status code
func (o *GetAllSpoeFilesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all spoe files not found response a status code equal to that given
func (o *GetAllSpoeFilesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAllSpoeFilesNotFound) Error() string {
	return fmt.Sprintf("[GET /services/haproxy/spoe/spoe_files][%d] getAllSpoeFilesNotFound  %+v", 404, o.Payload)
}

func (o *GetAllSpoeFilesNotFound) String() string {
	return fmt.Sprintf("[GET /services/haproxy/spoe/spoe_files][%d] getAllSpoeFilesNotFound  %+v", 404, o.Payload)
}

func (o *GetAllSpoeFilesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllSpoeFilesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllSpoeFilesDefault creates a GetAllSpoeFilesDefault with default headers values
func NewGetAllSpoeFilesDefault(code int) *GetAllSpoeFilesDefault {
	return &GetAllSpoeFilesDefault{
		_statusCode: code,
	}
}

/*
GetAllSpoeFilesDefault describes a response with status code -1, with default header values.

General Error
*/
type GetAllSpoeFilesDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// Code gets the status code for the get all spoe files default response
func (o *GetAllSpoeFilesDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this get all spoe files default response has a 2xx status code
func (o *GetAllSpoeFilesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get all spoe files default response has a 3xx status code
func (o *GetAllSpoeFilesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get all spoe files default response has a 4xx status code
func (o *GetAllSpoeFilesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get all spoe files default response has a 5xx status code
func (o *GetAllSpoeFilesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get all spoe files default response a status code equal to that given
func (o *GetAllSpoeFilesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *GetAllSpoeFilesDefault) Error() string {
	return fmt.Sprintf("[GET /services/haproxy/spoe/spoe_files][%d] getAllSpoeFiles default  %+v", o._statusCode, o.Payload)
}

func (o *GetAllSpoeFilesDefault) String() string {
	return fmt.Sprintf("[GET /services/haproxy/spoe/spoe_files][%d] getAllSpoeFiles default  %+v", o._statusCode, o.Payload)
}

func (o *GetAllSpoeFilesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllSpoeFilesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
