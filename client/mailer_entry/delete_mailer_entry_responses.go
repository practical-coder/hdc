// Code generated by go-swagger; DO NOT EDIT.

package mailer_entry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haproxytech/client-native/v5/models"
)

// DeleteMailerEntryReader is a Reader for the DeleteMailerEntry structure.
type DeleteMailerEntryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteMailerEntryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewDeleteMailerEntryAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteMailerEntryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteMailerEntryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteMailerEntryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteMailerEntryAccepted creates a DeleteMailerEntryAccepted with default headers values
func NewDeleteMailerEntryAccepted() *DeleteMailerEntryAccepted {
	return &DeleteMailerEntryAccepted{}
}

/*
DeleteMailerEntryAccepted describes a response with status code 202, with default header values.

Configuration change accepted and reload requested
*/
type DeleteMailerEntryAccepted struct {

	/* ID of the requested reload
	 */
	ReloadID string
}

// IsSuccess returns true when this delete mailer entry accepted response has a 2xx status code
func (o *DeleteMailerEntryAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete mailer entry accepted response has a 3xx status code
func (o *DeleteMailerEntryAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete mailer entry accepted response has a 4xx status code
func (o *DeleteMailerEntryAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete mailer entry accepted response has a 5xx status code
func (o *DeleteMailerEntryAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this delete mailer entry accepted response a status code equal to that given
func (o *DeleteMailerEntryAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the delete mailer entry accepted response
func (o *DeleteMailerEntryAccepted) Code() int {
	return 202
}

func (o *DeleteMailerEntryAccepted) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/mailer_entries/{name}][%d] deleteMailerEntryAccepted ", 202)
}

func (o *DeleteMailerEntryAccepted) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/mailer_entries/{name}][%d] deleteMailerEntryAccepted ", 202)
}

func (o *DeleteMailerEntryAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Reload-ID
	hdrReloadID := response.GetHeader("Reload-ID")

	if hdrReloadID != "" {
		o.ReloadID = hdrReloadID
	}

	return nil
}

// NewDeleteMailerEntryNoContent creates a DeleteMailerEntryNoContent with default headers values
func NewDeleteMailerEntryNoContent() *DeleteMailerEntryNoContent {
	return &DeleteMailerEntryNoContent{}
}

/*
DeleteMailerEntryNoContent describes a response with status code 204, with default header values.

MailerEntry deleted
*/
type DeleteMailerEntryNoContent struct {
}

// IsSuccess returns true when this delete mailer entry no content response has a 2xx status code
func (o *DeleteMailerEntryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete mailer entry no content response has a 3xx status code
func (o *DeleteMailerEntryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete mailer entry no content response has a 4xx status code
func (o *DeleteMailerEntryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete mailer entry no content response has a 5xx status code
func (o *DeleteMailerEntryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete mailer entry no content response a status code equal to that given
func (o *DeleteMailerEntryNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete mailer entry no content response
func (o *DeleteMailerEntryNoContent) Code() int {
	return 204
}

func (o *DeleteMailerEntryNoContent) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/mailer_entries/{name}][%d] deleteMailerEntryNoContent ", 204)
}

func (o *DeleteMailerEntryNoContent) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/mailer_entries/{name}][%d] deleteMailerEntryNoContent ", 204)
}

func (o *DeleteMailerEntryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteMailerEntryNotFound creates a DeleteMailerEntryNotFound with default headers values
func NewDeleteMailerEntryNotFound() *DeleteMailerEntryNotFound {
	return &DeleteMailerEntryNotFound{}
}

/*
DeleteMailerEntryNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type DeleteMailerEntryNotFound struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this delete mailer entry not found response has a 2xx status code
func (o *DeleteMailerEntryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete mailer entry not found response has a 3xx status code
func (o *DeleteMailerEntryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete mailer entry not found response has a 4xx status code
func (o *DeleteMailerEntryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete mailer entry not found response has a 5xx status code
func (o *DeleteMailerEntryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete mailer entry not found response a status code equal to that given
func (o *DeleteMailerEntryNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete mailer entry not found response
func (o *DeleteMailerEntryNotFound) Code() int {
	return 404
}

func (o *DeleteMailerEntryNotFound) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/mailer_entries/{name}][%d] deleteMailerEntryNotFound  %+v", 404, o.Payload)
}

func (o *DeleteMailerEntryNotFound) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/mailer_entries/{name}][%d] deleteMailerEntryNotFound  %+v", 404, o.Payload)
}

func (o *DeleteMailerEntryNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteMailerEntryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMailerEntryDefault creates a DeleteMailerEntryDefault with default headers values
func NewDeleteMailerEntryDefault(code int) *DeleteMailerEntryDefault {
	return &DeleteMailerEntryDefault{
		_statusCode: code,
	}
}

/*
DeleteMailerEntryDefault describes a response with status code -1, with default header values.

General Error
*/
type DeleteMailerEntryDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this delete mailer entry default response has a 2xx status code
func (o *DeleteMailerEntryDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete mailer entry default response has a 3xx status code
func (o *DeleteMailerEntryDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete mailer entry default response has a 4xx status code
func (o *DeleteMailerEntryDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete mailer entry default response has a 5xx status code
func (o *DeleteMailerEntryDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete mailer entry default response a status code equal to that given
func (o *DeleteMailerEntryDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete mailer entry default response
func (o *DeleteMailerEntryDefault) Code() int {
	return o._statusCode
}

func (o *DeleteMailerEntryDefault) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/mailer_entries/{name}][%d] deleteMailerEntry default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteMailerEntryDefault) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/mailer_entries/{name}][%d] deleteMailerEntry default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteMailerEntryDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteMailerEntryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
