// Code generated by go-swagger; DO NOT EDIT.

package mailer_entry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haproxytech/client-native/v5/models"
)

// CreateMailerEntryReader is a Reader for the CreateMailerEntry structure.
type CreateMailerEntryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateMailerEntryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateMailerEntryCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewCreateMailerEntryAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateMailerEntryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateMailerEntryConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateMailerEntryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateMailerEntryCreated creates a CreateMailerEntryCreated with default headers values
func NewCreateMailerEntryCreated() *CreateMailerEntryCreated {
	return &CreateMailerEntryCreated{}
}

/*
CreateMailerEntryCreated describes a response with status code 201, with default header values.

MailerEntry created
*/
type CreateMailerEntryCreated struct {
	Payload *models.MailerEntry
}

// IsSuccess returns true when this create mailer entry created response has a 2xx status code
func (o *CreateMailerEntryCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create mailer entry created response has a 3xx status code
func (o *CreateMailerEntryCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create mailer entry created response has a 4xx status code
func (o *CreateMailerEntryCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create mailer entry created response has a 5xx status code
func (o *CreateMailerEntryCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create mailer entry created response a status code equal to that given
func (o *CreateMailerEntryCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create mailer entry created response
func (o *CreateMailerEntryCreated) Code() int {
	return 201
}

func (o *CreateMailerEntryCreated) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/mailer_entries][%d] createMailerEntryCreated  %+v", 201, o.Payload)
}

func (o *CreateMailerEntryCreated) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/mailer_entries][%d] createMailerEntryCreated  %+v", 201, o.Payload)
}

func (o *CreateMailerEntryCreated) GetPayload() *models.MailerEntry {
	return o.Payload
}

func (o *CreateMailerEntryCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MailerEntry)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMailerEntryAccepted creates a CreateMailerEntryAccepted with default headers values
func NewCreateMailerEntryAccepted() *CreateMailerEntryAccepted {
	return &CreateMailerEntryAccepted{}
}

/*
CreateMailerEntryAccepted describes a response with status code 202, with default header values.

Configuration change accepted and reload requested
*/
type CreateMailerEntryAccepted struct {

	/* ID of the requested reload
	 */
	ReloadID string

	Payload *models.MailerEntry
}

// IsSuccess returns true when this create mailer entry accepted response has a 2xx status code
func (o *CreateMailerEntryAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create mailer entry accepted response has a 3xx status code
func (o *CreateMailerEntryAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create mailer entry accepted response has a 4xx status code
func (o *CreateMailerEntryAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this create mailer entry accepted response has a 5xx status code
func (o *CreateMailerEntryAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this create mailer entry accepted response a status code equal to that given
func (o *CreateMailerEntryAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the create mailer entry accepted response
func (o *CreateMailerEntryAccepted) Code() int {
	return 202
}

func (o *CreateMailerEntryAccepted) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/mailer_entries][%d] createMailerEntryAccepted  %+v", 202, o.Payload)
}

func (o *CreateMailerEntryAccepted) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/mailer_entries][%d] createMailerEntryAccepted  %+v", 202, o.Payload)
}

func (o *CreateMailerEntryAccepted) GetPayload() *models.MailerEntry {
	return o.Payload
}

func (o *CreateMailerEntryAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Reload-ID
	hdrReloadID := response.GetHeader("Reload-ID")

	if hdrReloadID != "" {
		o.ReloadID = hdrReloadID
	}

	o.Payload = new(models.MailerEntry)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMailerEntryBadRequest creates a CreateMailerEntryBadRequest with default headers values
func NewCreateMailerEntryBadRequest() *CreateMailerEntryBadRequest {
	return &CreateMailerEntryBadRequest{}
}

/*
CreateMailerEntryBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateMailerEntryBadRequest struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this create mailer entry bad request response has a 2xx status code
func (o *CreateMailerEntryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create mailer entry bad request response has a 3xx status code
func (o *CreateMailerEntryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create mailer entry bad request response has a 4xx status code
func (o *CreateMailerEntryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create mailer entry bad request response has a 5xx status code
func (o *CreateMailerEntryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create mailer entry bad request response a status code equal to that given
func (o *CreateMailerEntryBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create mailer entry bad request response
func (o *CreateMailerEntryBadRequest) Code() int {
	return 400
}

func (o *CreateMailerEntryBadRequest) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/mailer_entries][%d] createMailerEntryBadRequest  %+v", 400, o.Payload)
}

func (o *CreateMailerEntryBadRequest) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/mailer_entries][%d] createMailerEntryBadRequest  %+v", 400, o.Payload)
}

func (o *CreateMailerEntryBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateMailerEntryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMailerEntryConflict creates a CreateMailerEntryConflict with default headers values
func NewCreateMailerEntryConflict() *CreateMailerEntryConflict {
	return &CreateMailerEntryConflict{}
}

/*
CreateMailerEntryConflict describes a response with status code 409, with default header values.

The specified resource already exists
*/
type CreateMailerEntryConflict struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this create mailer entry conflict response has a 2xx status code
func (o *CreateMailerEntryConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create mailer entry conflict response has a 3xx status code
func (o *CreateMailerEntryConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create mailer entry conflict response has a 4xx status code
func (o *CreateMailerEntryConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create mailer entry conflict response has a 5xx status code
func (o *CreateMailerEntryConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create mailer entry conflict response a status code equal to that given
func (o *CreateMailerEntryConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create mailer entry conflict response
func (o *CreateMailerEntryConflict) Code() int {
	return 409
}

func (o *CreateMailerEntryConflict) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/mailer_entries][%d] createMailerEntryConflict  %+v", 409, o.Payload)
}

func (o *CreateMailerEntryConflict) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/mailer_entries][%d] createMailerEntryConflict  %+v", 409, o.Payload)
}

func (o *CreateMailerEntryConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateMailerEntryConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMailerEntryDefault creates a CreateMailerEntryDefault with default headers values
func NewCreateMailerEntryDefault(code int) *CreateMailerEntryDefault {
	return &CreateMailerEntryDefault{
		_statusCode: code,
	}
}

/*
CreateMailerEntryDefault describes a response with status code -1, with default header values.

General Error
*/
type CreateMailerEntryDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this create mailer entry default response has a 2xx status code
func (o *CreateMailerEntryDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create mailer entry default response has a 3xx status code
func (o *CreateMailerEntryDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create mailer entry default response has a 4xx status code
func (o *CreateMailerEntryDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create mailer entry default response has a 5xx status code
func (o *CreateMailerEntryDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create mailer entry default response a status code equal to that given
func (o *CreateMailerEntryDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create mailer entry default response
func (o *CreateMailerEntryDefault) Code() int {
	return o._statusCode
}

func (o *CreateMailerEntryDefault) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/mailer_entries][%d] createMailerEntry default  %+v", o._statusCode, o.Payload)
}

func (o *CreateMailerEntryDefault) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/mailer_entries][%d] createMailerEntry default  %+v", o._statusCode, o.Payload)
}

func (o *CreateMailerEntryDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateMailerEntryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
