// Code generated by go-swagger; DO NOT EDIT.

package acl_runtime

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haproxytech/client-native/v5/models"
)

// AddPayloadRuntimeACLReader is a Reader for the AddPayloadRuntimeACL structure.
type AddPayloadRuntimeACLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddPayloadRuntimeACLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddPayloadRuntimeACLCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddPayloadRuntimeACLBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAddPayloadRuntimeACLDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddPayloadRuntimeACLCreated creates a AddPayloadRuntimeACLCreated with default headers values
func NewAddPayloadRuntimeACLCreated() *AddPayloadRuntimeACLCreated {
	return &AddPayloadRuntimeACLCreated{}
}

/*
AddPayloadRuntimeACLCreated describes a response with status code 201, with default header values.

ACL payload added
*/
type AddPayloadRuntimeACLCreated struct {
	Payload models.ACLFilesEntries
}

// IsSuccess returns true when this add payload runtime Acl created response has a 2xx status code
func (o *AddPayloadRuntimeACLCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add payload runtime Acl created response has a 3xx status code
func (o *AddPayloadRuntimeACLCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add payload runtime Acl created response has a 4xx status code
func (o *AddPayloadRuntimeACLCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add payload runtime Acl created response has a 5xx status code
func (o *AddPayloadRuntimeACLCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add payload runtime Acl created response a status code equal to that given
func (o *AddPayloadRuntimeACLCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add payload runtime Acl created response
func (o *AddPayloadRuntimeACLCreated) Code() int {
	return 201
}

func (o *AddPayloadRuntimeACLCreated) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/runtime/acl_file_entries][%d] addPayloadRuntimeAclCreated  %+v", 201, o.Payload)
}

func (o *AddPayloadRuntimeACLCreated) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/runtime/acl_file_entries][%d] addPayloadRuntimeAclCreated  %+v", 201, o.Payload)
}

func (o *AddPayloadRuntimeACLCreated) GetPayload() models.ACLFilesEntries {
	return o.Payload
}

func (o *AddPayloadRuntimeACLCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPayloadRuntimeACLBadRequest creates a AddPayloadRuntimeACLBadRequest with default headers values
func NewAddPayloadRuntimeACLBadRequest() *AddPayloadRuntimeACLBadRequest {
	return &AddPayloadRuntimeACLBadRequest{}
}

/*
AddPayloadRuntimeACLBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type AddPayloadRuntimeACLBadRequest struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this add payload runtime Acl bad request response has a 2xx status code
func (o *AddPayloadRuntimeACLBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add payload runtime Acl bad request response has a 3xx status code
func (o *AddPayloadRuntimeACLBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add payload runtime Acl bad request response has a 4xx status code
func (o *AddPayloadRuntimeACLBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add payload runtime Acl bad request response has a 5xx status code
func (o *AddPayloadRuntimeACLBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add payload runtime Acl bad request response a status code equal to that given
func (o *AddPayloadRuntimeACLBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add payload runtime Acl bad request response
func (o *AddPayloadRuntimeACLBadRequest) Code() int {
	return 400
}

func (o *AddPayloadRuntimeACLBadRequest) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/runtime/acl_file_entries][%d] addPayloadRuntimeAclBadRequest  %+v", 400, o.Payload)
}

func (o *AddPayloadRuntimeACLBadRequest) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/runtime/acl_file_entries][%d] addPayloadRuntimeAclBadRequest  %+v", 400, o.Payload)
}

func (o *AddPayloadRuntimeACLBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddPayloadRuntimeACLBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPayloadRuntimeACLDefault creates a AddPayloadRuntimeACLDefault with default headers values
func NewAddPayloadRuntimeACLDefault(code int) *AddPayloadRuntimeACLDefault {
	return &AddPayloadRuntimeACLDefault{
		_statusCode: code,
	}
}

/*
AddPayloadRuntimeACLDefault describes a response with status code -1, with default header values.

General Error
*/
type AddPayloadRuntimeACLDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this add payload runtime ACL default response has a 2xx status code
func (o *AddPayloadRuntimeACLDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this add payload runtime ACL default response has a 3xx status code
func (o *AddPayloadRuntimeACLDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this add payload runtime ACL default response has a 4xx status code
func (o *AddPayloadRuntimeACLDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this add payload runtime ACL default response has a 5xx status code
func (o *AddPayloadRuntimeACLDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this add payload runtime ACL default response a status code equal to that given
func (o *AddPayloadRuntimeACLDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the add payload runtime ACL default response
func (o *AddPayloadRuntimeACLDefault) Code() int {
	return o._statusCode
}

func (o *AddPayloadRuntimeACLDefault) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/runtime/acl_file_entries][%d] addPayloadRuntimeACL default  %+v", o._statusCode, o.Payload)
}

func (o *AddPayloadRuntimeACLDefault) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/runtime/acl_file_entries][%d] addPayloadRuntimeACL default  %+v", o._statusCode, o.Payload)
}

func (o *AddPayloadRuntimeACLDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddPayloadRuntimeACLDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
