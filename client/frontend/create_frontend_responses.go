// Code generated by go-swagger; DO NOT EDIT.

package frontend

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haproxytech/client-native/v5/models"
)

// CreateFrontendReader is a Reader for the CreateFrontend structure.
type CreateFrontendReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateFrontendReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateFrontendCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewCreateFrontendAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateFrontendBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateFrontendConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateFrontendDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateFrontendCreated creates a CreateFrontendCreated with default headers values
func NewCreateFrontendCreated() *CreateFrontendCreated {
	return &CreateFrontendCreated{}
}

/*
CreateFrontendCreated describes a response with status code 201, with default header values.

Frontend created
*/
type CreateFrontendCreated struct {
	Payload *models.Frontend
}

// IsSuccess returns true when this create frontend created response has a 2xx status code
func (o *CreateFrontendCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create frontend created response has a 3xx status code
func (o *CreateFrontendCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create frontend created response has a 4xx status code
func (o *CreateFrontendCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create frontend created response has a 5xx status code
func (o *CreateFrontendCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create frontend created response a status code equal to that given
func (o *CreateFrontendCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create frontend created response
func (o *CreateFrontendCreated) Code() int {
	return 201
}

func (o *CreateFrontendCreated) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/frontends][%d] createFrontendCreated  %+v", 201, o.Payload)
}

func (o *CreateFrontendCreated) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/frontends][%d] createFrontendCreated  %+v", 201, o.Payload)
}

func (o *CreateFrontendCreated) GetPayload() *models.Frontend {
	return o.Payload
}

func (o *CreateFrontendCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Frontend)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFrontendAccepted creates a CreateFrontendAccepted with default headers values
func NewCreateFrontendAccepted() *CreateFrontendAccepted {
	return &CreateFrontendAccepted{}
}

/*
CreateFrontendAccepted describes a response with status code 202, with default header values.

Configuration change accepted and reload requested
*/
type CreateFrontendAccepted struct {

	/* ID of the requested reload
	 */
	ReloadID string

	Payload *models.Frontend
}

// IsSuccess returns true when this create frontend accepted response has a 2xx status code
func (o *CreateFrontendAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create frontend accepted response has a 3xx status code
func (o *CreateFrontendAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create frontend accepted response has a 4xx status code
func (o *CreateFrontendAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this create frontend accepted response has a 5xx status code
func (o *CreateFrontendAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this create frontend accepted response a status code equal to that given
func (o *CreateFrontendAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the create frontend accepted response
func (o *CreateFrontendAccepted) Code() int {
	return 202
}

func (o *CreateFrontendAccepted) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/frontends][%d] createFrontendAccepted  %+v", 202, o.Payload)
}

func (o *CreateFrontendAccepted) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/frontends][%d] createFrontendAccepted  %+v", 202, o.Payload)
}

func (o *CreateFrontendAccepted) GetPayload() *models.Frontend {
	return o.Payload
}

func (o *CreateFrontendAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Reload-ID
	hdrReloadID := response.GetHeader("Reload-ID")

	if hdrReloadID != "" {
		o.ReloadID = hdrReloadID
	}

	o.Payload = new(models.Frontend)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFrontendBadRequest creates a CreateFrontendBadRequest with default headers values
func NewCreateFrontendBadRequest() *CreateFrontendBadRequest {
	return &CreateFrontendBadRequest{}
}

/*
CreateFrontendBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateFrontendBadRequest struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this create frontend bad request response has a 2xx status code
func (o *CreateFrontendBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create frontend bad request response has a 3xx status code
func (o *CreateFrontendBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create frontend bad request response has a 4xx status code
func (o *CreateFrontendBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create frontend bad request response has a 5xx status code
func (o *CreateFrontendBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create frontend bad request response a status code equal to that given
func (o *CreateFrontendBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create frontend bad request response
func (o *CreateFrontendBadRequest) Code() int {
	return 400
}

func (o *CreateFrontendBadRequest) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/frontends][%d] createFrontendBadRequest  %+v", 400, o.Payload)
}

func (o *CreateFrontendBadRequest) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/frontends][%d] createFrontendBadRequest  %+v", 400, o.Payload)
}

func (o *CreateFrontendBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateFrontendBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFrontendConflict creates a CreateFrontendConflict with default headers values
func NewCreateFrontendConflict() *CreateFrontendConflict {
	return &CreateFrontendConflict{}
}

/*
CreateFrontendConflict describes a response with status code 409, with default header values.

The specified resource already exists
*/
type CreateFrontendConflict struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this create frontend conflict response has a 2xx status code
func (o *CreateFrontendConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create frontend conflict response has a 3xx status code
func (o *CreateFrontendConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create frontend conflict response has a 4xx status code
func (o *CreateFrontendConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create frontend conflict response has a 5xx status code
func (o *CreateFrontendConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create frontend conflict response a status code equal to that given
func (o *CreateFrontendConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create frontend conflict response
func (o *CreateFrontendConflict) Code() int {
	return 409
}

func (o *CreateFrontendConflict) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/frontends][%d] createFrontendConflict  %+v", 409, o.Payload)
}

func (o *CreateFrontendConflict) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/frontends][%d] createFrontendConflict  %+v", 409, o.Payload)
}

func (o *CreateFrontendConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateFrontendConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFrontendDefault creates a CreateFrontendDefault with default headers values
func NewCreateFrontendDefault(code int) *CreateFrontendDefault {
	return &CreateFrontendDefault{
		_statusCode: code,
	}
}

/*
CreateFrontendDefault describes a response with status code -1, with default header values.

General Error
*/
type CreateFrontendDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this create frontend default response has a 2xx status code
func (o *CreateFrontendDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create frontend default response has a 3xx status code
func (o *CreateFrontendDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create frontend default response has a 4xx status code
func (o *CreateFrontendDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create frontend default response has a 5xx status code
func (o *CreateFrontendDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create frontend default response a status code equal to that given
func (o *CreateFrontendDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create frontend default response
func (o *CreateFrontendDefault) Code() int {
	return o._statusCode
}

func (o *CreateFrontendDefault) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/frontends][%d] createFrontend default  %+v", o._statusCode, o.Payload)
}

func (o *CreateFrontendDefault) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/frontends][%d] createFrontend default  %+v", o._statusCode, o.Payload)
}

func (o *CreateFrontendDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateFrontendDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
