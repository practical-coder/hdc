// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haproxytech/client-native/v4/models"
)

// AddRuntimeServerReader is a Reader for the AddRuntimeServer structure.
type AddRuntimeServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddRuntimeServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddRuntimeServerCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddRuntimeServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddRuntimeServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAddRuntimeServerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAddRuntimeServerDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddRuntimeServerCreated creates a AddRuntimeServerCreated with default headers values
func NewAddRuntimeServerCreated() *AddRuntimeServerCreated {
	return &AddRuntimeServerCreated{}
}

/*
AddRuntimeServerCreated describes a response with status code 201, with default header values.

Server added
*/
type AddRuntimeServerCreated struct {
	Payload *models.RuntimeAddServer
}

// IsSuccess returns true when this add runtime server created response has a 2xx status code
func (o *AddRuntimeServerCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add runtime server created response has a 3xx status code
func (o *AddRuntimeServerCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add runtime server created response has a 4xx status code
func (o *AddRuntimeServerCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add runtime server created response has a 5xx status code
func (o *AddRuntimeServerCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add runtime server created response a status code equal to that given
func (o *AddRuntimeServerCreated) IsCode(code int) bool {
	return code == 201
}

func (o *AddRuntimeServerCreated) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/runtime/servers][%d] addRuntimeServerCreated  %+v", 201, o.Payload)
}

func (o *AddRuntimeServerCreated) String() string {
	return fmt.Sprintf("[POST /services/haproxy/runtime/servers][%d] addRuntimeServerCreated  %+v", 201, o.Payload)
}

func (o *AddRuntimeServerCreated) GetPayload() *models.RuntimeAddServer {
	return o.Payload
}

func (o *AddRuntimeServerCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeAddServer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddRuntimeServerBadRequest creates a AddRuntimeServerBadRequest with default headers values
func NewAddRuntimeServerBadRequest() *AddRuntimeServerBadRequest {
	return &AddRuntimeServerBadRequest{}
}

/*
AddRuntimeServerBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type AddRuntimeServerBadRequest struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this add runtime server bad request response has a 2xx status code
func (o *AddRuntimeServerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add runtime server bad request response has a 3xx status code
func (o *AddRuntimeServerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add runtime server bad request response has a 4xx status code
func (o *AddRuntimeServerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add runtime server bad request response has a 5xx status code
func (o *AddRuntimeServerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add runtime server bad request response a status code equal to that given
func (o *AddRuntimeServerBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AddRuntimeServerBadRequest) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/runtime/servers][%d] addRuntimeServerBadRequest  %+v", 400, o.Payload)
}

func (o *AddRuntimeServerBadRequest) String() string {
	return fmt.Sprintf("[POST /services/haproxy/runtime/servers][%d] addRuntimeServerBadRequest  %+v", 400, o.Payload)
}

func (o *AddRuntimeServerBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddRuntimeServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddRuntimeServerNotFound creates a AddRuntimeServerNotFound with default headers values
func NewAddRuntimeServerNotFound() *AddRuntimeServerNotFound {
	return &AddRuntimeServerNotFound{}
}

/*
AddRuntimeServerNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type AddRuntimeServerNotFound struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this add runtime server not found response has a 2xx status code
func (o *AddRuntimeServerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add runtime server not found response has a 3xx status code
func (o *AddRuntimeServerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add runtime server not found response has a 4xx status code
func (o *AddRuntimeServerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add runtime server not found response has a 5xx status code
func (o *AddRuntimeServerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add runtime server not found response a status code equal to that given
func (o *AddRuntimeServerNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AddRuntimeServerNotFound) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/runtime/servers][%d] addRuntimeServerNotFound  %+v", 404, o.Payload)
}

func (o *AddRuntimeServerNotFound) String() string {
	return fmt.Sprintf("[POST /services/haproxy/runtime/servers][%d] addRuntimeServerNotFound  %+v", 404, o.Payload)
}

func (o *AddRuntimeServerNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddRuntimeServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddRuntimeServerConflict creates a AddRuntimeServerConflict with default headers values
func NewAddRuntimeServerConflict() *AddRuntimeServerConflict {
	return &AddRuntimeServerConflict{}
}

/*
AddRuntimeServerConflict describes a response with status code 409, with default header values.

The specified resource already exists
*/
type AddRuntimeServerConflict struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this add runtime server conflict response has a 2xx status code
func (o *AddRuntimeServerConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add runtime server conflict response has a 3xx status code
func (o *AddRuntimeServerConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add runtime server conflict response has a 4xx status code
func (o *AddRuntimeServerConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this add runtime server conflict response has a 5xx status code
func (o *AddRuntimeServerConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this add runtime server conflict response a status code equal to that given
func (o *AddRuntimeServerConflict) IsCode(code int) bool {
	return code == 409
}

func (o *AddRuntimeServerConflict) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/runtime/servers][%d] addRuntimeServerConflict  %+v", 409, o.Payload)
}

func (o *AddRuntimeServerConflict) String() string {
	return fmt.Sprintf("[POST /services/haproxy/runtime/servers][%d] addRuntimeServerConflict  %+v", 409, o.Payload)
}

func (o *AddRuntimeServerConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddRuntimeServerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddRuntimeServerDefault creates a AddRuntimeServerDefault with default headers values
func NewAddRuntimeServerDefault(code int) *AddRuntimeServerDefault {
	return &AddRuntimeServerDefault{
		_statusCode: code,
	}
}

/*
AddRuntimeServerDefault describes a response with status code -1, with default header values.

General Error
*/
type AddRuntimeServerDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// Code gets the status code for the add runtime server default response
func (o *AddRuntimeServerDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this add runtime server default response has a 2xx status code
func (o *AddRuntimeServerDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this add runtime server default response has a 3xx status code
func (o *AddRuntimeServerDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this add runtime server default response has a 4xx status code
func (o *AddRuntimeServerDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this add runtime server default response has a 5xx status code
func (o *AddRuntimeServerDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this add runtime server default response a status code equal to that given
func (o *AddRuntimeServerDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *AddRuntimeServerDefault) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/runtime/servers][%d] addRuntimeServer default  %+v", o._statusCode, o.Payload)
}

func (o *AddRuntimeServerDefault) String() string {
	return fmt.Sprintf("[POST /services/haproxy/runtime/servers][%d] addRuntimeServer default  %+v", o._statusCode, o.Payload)
}

func (o *AddRuntimeServerDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddRuntimeServerDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
