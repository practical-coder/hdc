// Code generated by go-swagger; DO NOT EDIT.

package maps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haproxytech/client-native/v5/models"
)

// DeleteRuntimeMapEntryReader is a Reader for the DeleteRuntimeMapEntry structure.
type DeleteRuntimeMapEntryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRuntimeMapEntryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteRuntimeMapEntryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteRuntimeMapEntryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteRuntimeMapEntryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteRuntimeMapEntryNoContent creates a DeleteRuntimeMapEntryNoContent with default headers values
func NewDeleteRuntimeMapEntryNoContent() *DeleteRuntimeMapEntryNoContent {
	return &DeleteRuntimeMapEntryNoContent{}
}

/*
DeleteRuntimeMapEntryNoContent describes a response with status code 204, with default header values.

Map key/value deleted
*/
type DeleteRuntimeMapEntryNoContent struct {
}

// IsSuccess returns true when this delete runtime map entry no content response has a 2xx status code
func (o *DeleteRuntimeMapEntryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete runtime map entry no content response has a 3xx status code
func (o *DeleteRuntimeMapEntryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete runtime map entry no content response has a 4xx status code
func (o *DeleteRuntimeMapEntryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete runtime map entry no content response has a 5xx status code
func (o *DeleteRuntimeMapEntryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete runtime map entry no content response a status code equal to that given
func (o *DeleteRuntimeMapEntryNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete runtime map entry no content response
func (o *DeleteRuntimeMapEntryNoContent) Code() int {
	return 204
}

func (o *DeleteRuntimeMapEntryNoContent) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/runtime/maps_entries/{id}][%d] deleteRuntimeMapEntryNoContent ", 204)
}

func (o *DeleteRuntimeMapEntryNoContent) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/runtime/maps_entries/{id}][%d] deleteRuntimeMapEntryNoContent ", 204)
}

func (o *DeleteRuntimeMapEntryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRuntimeMapEntryNotFound creates a DeleteRuntimeMapEntryNotFound with default headers values
func NewDeleteRuntimeMapEntryNotFound() *DeleteRuntimeMapEntryNotFound {
	return &DeleteRuntimeMapEntryNotFound{}
}

/*
DeleteRuntimeMapEntryNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type DeleteRuntimeMapEntryNotFound struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this delete runtime map entry not found response has a 2xx status code
func (o *DeleteRuntimeMapEntryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete runtime map entry not found response has a 3xx status code
func (o *DeleteRuntimeMapEntryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete runtime map entry not found response has a 4xx status code
func (o *DeleteRuntimeMapEntryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete runtime map entry not found response has a 5xx status code
func (o *DeleteRuntimeMapEntryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete runtime map entry not found response a status code equal to that given
func (o *DeleteRuntimeMapEntryNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete runtime map entry not found response
func (o *DeleteRuntimeMapEntryNotFound) Code() int {
	return 404
}

func (o *DeleteRuntimeMapEntryNotFound) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/runtime/maps_entries/{id}][%d] deleteRuntimeMapEntryNotFound  %+v", 404, o.Payload)
}

func (o *DeleteRuntimeMapEntryNotFound) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/runtime/maps_entries/{id}][%d] deleteRuntimeMapEntryNotFound  %+v", 404, o.Payload)
}

func (o *DeleteRuntimeMapEntryNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteRuntimeMapEntryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRuntimeMapEntryDefault creates a DeleteRuntimeMapEntryDefault with default headers values
func NewDeleteRuntimeMapEntryDefault(code int) *DeleteRuntimeMapEntryDefault {
	return &DeleteRuntimeMapEntryDefault{
		_statusCode: code,
	}
}

/*
DeleteRuntimeMapEntryDefault describes a response with status code -1, with default header values.

General Error
*/
type DeleteRuntimeMapEntryDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this delete runtime map entry default response has a 2xx status code
func (o *DeleteRuntimeMapEntryDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete runtime map entry default response has a 3xx status code
func (o *DeleteRuntimeMapEntryDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete runtime map entry default response has a 4xx status code
func (o *DeleteRuntimeMapEntryDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete runtime map entry default response has a 5xx status code
func (o *DeleteRuntimeMapEntryDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete runtime map entry default response a status code equal to that given
func (o *DeleteRuntimeMapEntryDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete runtime map entry default response
func (o *DeleteRuntimeMapEntryDefault) Code() int {
	return o._statusCode
}

func (o *DeleteRuntimeMapEntryDefault) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/runtime/maps_entries/{id}][%d] deleteRuntimeMapEntry default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteRuntimeMapEntryDefault) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/runtime/maps_entries/{id}][%d] deleteRuntimeMapEntry default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteRuntimeMapEntryDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteRuntimeMapEntryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
