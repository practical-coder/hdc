// Code generated by go-swagger; DO NOT EDIT.

package dgram_bind

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haproxytech/client-native/v4/models"
)

// CreateDgramBindReader is a Reader for the CreateDgramBind structure.
type CreateDgramBindReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDgramBindReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateDgramBindCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewCreateDgramBindAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateDgramBindBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateDgramBindConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateDgramBindDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateDgramBindCreated creates a CreateDgramBindCreated with default headers values
func NewCreateDgramBindCreated() *CreateDgramBindCreated {
	return &CreateDgramBindCreated{}
}

/*
CreateDgramBindCreated describes a response with status code 201, with default header values.

Bind created
*/
type CreateDgramBindCreated struct {
	Payload *models.DgramBind
}

// IsSuccess returns true when this create dgram bind created response has a 2xx status code
func (o *CreateDgramBindCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create dgram bind created response has a 3xx status code
func (o *CreateDgramBindCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create dgram bind created response has a 4xx status code
func (o *CreateDgramBindCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create dgram bind created response has a 5xx status code
func (o *CreateDgramBindCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create dgram bind created response a status code equal to that given
func (o *CreateDgramBindCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateDgramBindCreated) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/dgram_binds][%d] createDgramBindCreated  %+v", 201, o.Payload)
}

func (o *CreateDgramBindCreated) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/dgram_binds][%d] createDgramBindCreated  %+v", 201, o.Payload)
}

func (o *CreateDgramBindCreated) GetPayload() *models.DgramBind {
	return o.Payload
}

func (o *CreateDgramBindCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DgramBind)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDgramBindAccepted creates a CreateDgramBindAccepted with default headers values
func NewCreateDgramBindAccepted() *CreateDgramBindAccepted {
	return &CreateDgramBindAccepted{}
}

/*
CreateDgramBindAccepted describes a response with status code 202, with default header values.

Configuration change accepted and reload requested
*/
type CreateDgramBindAccepted struct {

	/* ID of the requested reload
	 */
	ReloadID string

	Payload *models.DgramBind
}

// IsSuccess returns true when this create dgram bind accepted response has a 2xx status code
func (o *CreateDgramBindAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create dgram bind accepted response has a 3xx status code
func (o *CreateDgramBindAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create dgram bind accepted response has a 4xx status code
func (o *CreateDgramBindAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this create dgram bind accepted response has a 5xx status code
func (o *CreateDgramBindAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this create dgram bind accepted response a status code equal to that given
func (o *CreateDgramBindAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *CreateDgramBindAccepted) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/dgram_binds][%d] createDgramBindAccepted  %+v", 202, o.Payload)
}

func (o *CreateDgramBindAccepted) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/dgram_binds][%d] createDgramBindAccepted  %+v", 202, o.Payload)
}

func (o *CreateDgramBindAccepted) GetPayload() *models.DgramBind {
	return o.Payload
}

func (o *CreateDgramBindAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Reload-ID
	hdrReloadID := response.GetHeader("Reload-ID")

	if hdrReloadID != "" {
		o.ReloadID = hdrReloadID
	}

	o.Payload = new(models.DgramBind)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDgramBindBadRequest creates a CreateDgramBindBadRequest with default headers values
func NewCreateDgramBindBadRequest() *CreateDgramBindBadRequest {
	return &CreateDgramBindBadRequest{}
}

/*
CreateDgramBindBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateDgramBindBadRequest struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this create dgram bind bad request response has a 2xx status code
func (o *CreateDgramBindBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create dgram bind bad request response has a 3xx status code
func (o *CreateDgramBindBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create dgram bind bad request response has a 4xx status code
func (o *CreateDgramBindBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create dgram bind bad request response has a 5xx status code
func (o *CreateDgramBindBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create dgram bind bad request response a status code equal to that given
func (o *CreateDgramBindBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateDgramBindBadRequest) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/dgram_binds][%d] createDgramBindBadRequest  %+v", 400, o.Payload)
}

func (o *CreateDgramBindBadRequest) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/dgram_binds][%d] createDgramBindBadRequest  %+v", 400, o.Payload)
}

func (o *CreateDgramBindBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateDgramBindBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDgramBindConflict creates a CreateDgramBindConflict with default headers values
func NewCreateDgramBindConflict() *CreateDgramBindConflict {
	return &CreateDgramBindConflict{}
}

/*
CreateDgramBindConflict describes a response with status code 409, with default header values.

The specified resource already exists
*/
type CreateDgramBindConflict struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this create dgram bind conflict response has a 2xx status code
func (o *CreateDgramBindConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create dgram bind conflict response has a 3xx status code
func (o *CreateDgramBindConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create dgram bind conflict response has a 4xx status code
func (o *CreateDgramBindConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create dgram bind conflict response has a 5xx status code
func (o *CreateDgramBindConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create dgram bind conflict response a status code equal to that given
func (o *CreateDgramBindConflict) IsCode(code int) bool {
	return code == 409
}

func (o *CreateDgramBindConflict) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/dgram_binds][%d] createDgramBindConflict  %+v", 409, o.Payload)
}

func (o *CreateDgramBindConflict) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/dgram_binds][%d] createDgramBindConflict  %+v", 409, o.Payload)
}

func (o *CreateDgramBindConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateDgramBindConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDgramBindDefault creates a CreateDgramBindDefault with default headers values
func NewCreateDgramBindDefault(code int) *CreateDgramBindDefault {
	return &CreateDgramBindDefault{
		_statusCode: code,
	}
}

/*
CreateDgramBindDefault describes a response with status code -1, with default header values.

General Error
*/
type CreateDgramBindDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// Code gets the status code for the create dgram bind default response
func (o *CreateDgramBindDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this create dgram bind default response has a 2xx status code
func (o *CreateDgramBindDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create dgram bind default response has a 3xx status code
func (o *CreateDgramBindDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create dgram bind default response has a 4xx status code
func (o *CreateDgramBindDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create dgram bind default response has a 5xx status code
func (o *CreateDgramBindDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create dgram bind default response a status code equal to that given
func (o *CreateDgramBindDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *CreateDgramBindDefault) Error() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/dgram_binds][%d] createDgramBind default  %+v", o._statusCode, o.Payload)
}

func (o *CreateDgramBindDefault) String() string {
	return fmt.Sprintf("[POST /services/haproxy/configuration/dgram_binds][%d] createDgramBind default  %+v", o._statusCode, o.Payload)
}

func (o *CreateDgramBindDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateDgramBindDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
