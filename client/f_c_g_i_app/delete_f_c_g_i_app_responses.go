// Code generated by go-swagger; DO NOT EDIT.

package f_c_g_i_app

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haproxytech/client-native/v5/models"
)

// DeleteFCGIAppReader is a Reader for the DeleteFCGIApp structure.
type DeleteFCGIAppReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteFCGIAppReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewDeleteFCGIAppAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteFCGIAppNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteFCGIAppNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteFCGIAppDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteFCGIAppAccepted creates a DeleteFCGIAppAccepted with default headers values
func NewDeleteFCGIAppAccepted() *DeleteFCGIAppAccepted {
	return &DeleteFCGIAppAccepted{}
}

/*
DeleteFCGIAppAccepted describes a response with status code 202, with default header values.

Configuration change accepted and reload requested
*/
type DeleteFCGIAppAccepted struct {

	/* ID of the requested reload
	 */
	ReloadID string
}

// IsSuccess returns true when this delete f c g i app accepted response has a 2xx status code
func (o *DeleteFCGIAppAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete f c g i app accepted response has a 3xx status code
func (o *DeleteFCGIAppAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete f c g i app accepted response has a 4xx status code
func (o *DeleteFCGIAppAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete f c g i app accepted response has a 5xx status code
func (o *DeleteFCGIAppAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this delete f c g i app accepted response a status code equal to that given
func (o *DeleteFCGIAppAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the delete f c g i app accepted response
func (o *DeleteFCGIAppAccepted) Code() int {
	return 202
}

func (o *DeleteFCGIAppAccepted) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/fcgi_apps/{name}][%d] deleteFCGIAppAccepted ", 202)
}

func (o *DeleteFCGIAppAccepted) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/fcgi_apps/{name}][%d] deleteFCGIAppAccepted ", 202)
}

func (o *DeleteFCGIAppAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Reload-ID
	hdrReloadID := response.GetHeader("Reload-ID")

	if hdrReloadID != "" {
		o.ReloadID = hdrReloadID
	}

	return nil
}

// NewDeleteFCGIAppNoContent creates a DeleteFCGIAppNoContent with default headers values
func NewDeleteFCGIAppNoContent() *DeleteFCGIAppNoContent {
	return &DeleteFCGIAppNoContent{}
}

/*
DeleteFCGIAppNoContent describes a response with status code 204, with default header values.

Application deleted
*/
type DeleteFCGIAppNoContent struct {
}

// IsSuccess returns true when this delete f c g i app no content response has a 2xx status code
func (o *DeleteFCGIAppNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete f c g i app no content response has a 3xx status code
func (o *DeleteFCGIAppNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete f c g i app no content response has a 4xx status code
func (o *DeleteFCGIAppNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete f c g i app no content response has a 5xx status code
func (o *DeleteFCGIAppNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete f c g i app no content response a status code equal to that given
func (o *DeleteFCGIAppNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete f c g i app no content response
func (o *DeleteFCGIAppNoContent) Code() int {
	return 204
}

func (o *DeleteFCGIAppNoContent) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/fcgi_apps/{name}][%d] deleteFCGIAppNoContent ", 204)
}

func (o *DeleteFCGIAppNoContent) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/fcgi_apps/{name}][%d] deleteFCGIAppNoContent ", 204)
}

func (o *DeleteFCGIAppNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteFCGIAppNotFound creates a DeleteFCGIAppNotFound with default headers values
func NewDeleteFCGIAppNotFound() *DeleteFCGIAppNotFound {
	return &DeleteFCGIAppNotFound{}
}

/*
DeleteFCGIAppNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type DeleteFCGIAppNotFound struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this delete f c g i app not found response has a 2xx status code
func (o *DeleteFCGIAppNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete f c g i app not found response has a 3xx status code
func (o *DeleteFCGIAppNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete f c g i app not found response has a 4xx status code
func (o *DeleteFCGIAppNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete f c g i app not found response has a 5xx status code
func (o *DeleteFCGIAppNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete f c g i app not found response a status code equal to that given
func (o *DeleteFCGIAppNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete f c g i app not found response
func (o *DeleteFCGIAppNotFound) Code() int {
	return 404
}

func (o *DeleteFCGIAppNotFound) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/fcgi_apps/{name}][%d] deleteFCGIAppNotFound  %+v", 404, o.Payload)
}

func (o *DeleteFCGIAppNotFound) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/fcgi_apps/{name}][%d] deleteFCGIAppNotFound  %+v", 404, o.Payload)
}

func (o *DeleteFCGIAppNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteFCGIAppNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFCGIAppDefault creates a DeleteFCGIAppDefault with default headers values
func NewDeleteFCGIAppDefault(code int) *DeleteFCGIAppDefault {
	return &DeleteFCGIAppDefault{
		_statusCode: code,
	}
}

/*
DeleteFCGIAppDefault describes a response with status code -1, with default header values.

General Error
*/
type DeleteFCGIAppDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this delete f c g i app default response has a 2xx status code
func (o *DeleteFCGIAppDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete f c g i app default response has a 3xx status code
func (o *DeleteFCGIAppDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete f c g i app default response has a 4xx status code
func (o *DeleteFCGIAppDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete f c g i app default response has a 5xx status code
func (o *DeleteFCGIAppDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete f c g i app default response a status code equal to that given
func (o *DeleteFCGIAppDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete f c g i app default response
func (o *DeleteFCGIAppDefault) Code() int {
	return o._statusCode
}

func (o *DeleteFCGIAppDefault) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/fcgi_apps/{name}][%d] deleteFCGIApp default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteFCGIAppDefault) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/configuration/fcgi_apps/{name}][%d] deleteFCGIApp default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteFCGIAppDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteFCGIAppDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
