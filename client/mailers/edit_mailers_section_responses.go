// Code generated by go-swagger; DO NOT EDIT.

package mailers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haproxytech/client-native/v5/models"
)

// EditMailersSectionReader is a Reader for the EditMailersSection structure.
type EditMailersSectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EditMailersSectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEditMailersSectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewEditMailersSectionAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEditMailersSectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEditMailersSectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEditMailersSectionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEditMailersSectionOK creates a EditMailersSectionOK with default headers values
func NewEditMailersSectionOK() *EditMailersSectionOK {
	return &EditMailersSectionOK{}
}

/*
EditMailersSectionOK describes a response with status code 200, with default header values.

Mailers configuration updated
*/
type EditMailersSectionOK struct {
	Payload *models.MailersSection
}

// IsSuccess returns true when this edit mailers section o k response has a 2xx status code
func (o *EditMailersSectionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this edit mailers section o k response has a 3xx status code
func (o *EditMailersSectionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit mailers section o k response has a 4xx status code
func (o *EditMailersSectionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this edit mailers section o k response has a 5xx status code
func (o *EditMailersSectionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this edit mailers section o k response a status code equal to that given
func (o *EditMailersSectionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the edit mailers section o k response
func (o *EditMailersSectionOK) Code() int {
	return 200
}

func (o *EditMailersSectionOK) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/mailers_section/{name}][%d] editMailersSectionOK  %+v", 200, o.Payload)
}

func (o *EditMailersSectionOK) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/mailers_section/{name}][%d] editMailersSectionOK  %+v", 200, o.Payload)
}

func (o *EditMailersSectionOK) GetPayload() *models.MailersSection {
	return o.Payload
}

func (o *EditMailersSectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MailersSection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditMailersSectionAccepted creates a EditMailersSectionAccepted with default headers values
func NewEditMailersSectionAccepted() *EditMailersSectionAccepted {
	return &EditMailersSectionAccepted{}
}

/*
EditMailersSectionAccepted describes a response with status code 202, with default header values.

Configuration change accepted and reload requested
*/
type EditMailersSectionAccepted struct {

	/* ID of the requested reload
	 */
	ReloadID string

	Payload *models.MailersSection
}

// IsSuccess returns true when this edit mailers section accepted response has a 2xx status code
func (o *EditMailersSectionAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this edit mailers section accepted response has a 3xx status code
func (o *EditMailersSectionAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit mailers section accepted response has a 4xx status code
func (o *EditMailersSectionAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this edit mailers section accepted response has a 5xx status code
func (o *EditMailersSectionAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this edit mailers section accepted response a status code equal to that given
func (o *EditMailersSectionAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the edit mailers section accepted response
func (o *EditMailersSectionAccepted) Code() int {
	return 202
}

func (o *EditMailersSectionAccepted) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/mailers_section/{name}][%d] editMailersSectionAccepted  %+v", 202, o.Payload)
}

func (o *EditMailersSectionAccepted) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/mailers_section/{name}][%d] editMailersSectionAccepted  %+v", 202, o.Payload)
}

func (o *EditMailersSectionAccepted) GetPayload() *models.MailersSection {
	return o.Payload
}

func (o *EditMailersSectionAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Reload-ID
	hdrReloadID := response.GetHeader("Reload-ID")

	if hdrReloadID != "" {
		o.ReloadID = hdrReloadID
	}

	o.Payload = new(models.MailersSection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditMailersSectionBadRequest creates a EditMailersSectionBadRequest with default headers values
func NewEditMailersSectionBadRequest() *EditMailersSectionBadRequest {
	return &EditMailersSectionBadRequest{}
}

/*
EditMailersSectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type EditMailersSectionBadRequest struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this edit mailers section bad request response has a 2xx status code
func (o *EditMailersSectionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edit mailers section bad request response has a 3xx status code
func (o *EditMailersSectionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit mailers section bad request response has a 4xx status code
func (o *EditMailersSectionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this edit mailers section bad request response has a 5xx status code
func (o *EditMailersSectionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this edit mailers section bad request response a status code equal to that given
func (o *EditMailersSectionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the edit mailers section bad request response
func (o *EditMailersSectionBadRequest) Code() int {
	return 400
}

func (o *EditMailersSectionBadRequest) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/mailers_section/{name}][%d] editMailersSectionBadRequest  %+v", 400, o.Payload)
}

func (o *EditMailersSectionBadRequest) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/mailers_section/{name}][%d] editMailersSectionBadRequest  %+v", 400, o.Payload)
}

func (o *EditMailersSectionBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *EditMailersSectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditMailersSectionNotFound creates a EditMailersSectionNotFound with default headers values
func NewEditMailersSectionNotFound() *EditMailersSectionNotFound {
	return &EditMailersSectionNotFound{}
}

/*
EditMailersSectionNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type EditMailersSectionNotFound struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this edit mailers section not found response has a 2xx status code
func (o *EditMailersSectionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edit mailers section not found response has a 3xx status code
func (o *EditMailersSectionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit mailers section not found response has a 4xx status code
func (o *EditMailersSectionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this edit mailers section not found response has a 5xx status code
func (o *EditMailersSectionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this edit mailers section not found response a status code equal to that given
func (o *EditMailersSectionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the edit mailers section not found response
func (o *EditMailersSectionNotFound) Code() int {
	return 404
}

func (o *EditMailersSectionNotFound) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/mailers_section/{name}][%d] editMailersSectionNotFound  %+v", 404, o.Payload)
}

func (o *EditMailersSectionNotFound) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/mailers_section/{name}][%d] editMailersSectionNotFound  %+v", 404, o.Payload)
}

func (o *EditMailersSectionNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *EditMailersSectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditMailersSectionDefault creates a EditMailersSectionDefault with default headers values
func NewEditMailersSectionDefault(code int) *EditMailersSectionDefault {
	return &EditMailersSectionDefault{
		_statusCode: code,
	}
}

/*
EditMailersSectionDefault describes a response with status code -1, with default header values.

General Error
*/
type EditMailersSectionDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this edit mailers section default response has a 2xx status code
func (o *EditMailersSectionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this edit mailers section default response has a 3xx status code
func (o *EditMailersSectionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this edit mailers section default response has a 4xx status code
func (o *EditMailersSectionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this edit mailers section default response has a 5xx status code
func (o *EditMailersSectionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this edit mailers section default response a status code equal to that given
func (o *EditMailersSectionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the edit mailers section default response
func (o *EditMailersSectionDefault) Code() int {
	return o._statusCode
}

func (o *EditMailersSectionDefault) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/mailers_section/{name}][%d] editMailersSection default  %+v", o._statusCode, o.Payload)
}

func (o *EditMailersSectionDefault) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/mailers_section/{name}][%d] editMailersSection default  %+v", o._statusCode, o.Payload)
}

func (o *EditMailersSectionDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *EditMailersSectionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
