// Code generated by go-swagger; DO NOT EDIT.

package defaults

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haproxytech/client-native/v4/models"
)

// ReplaceDefaultsSectionReader is a Reader for the ReplaceDefaultsSection structure.
type ReplaceDefaultsSectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceDefaultsSectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplaceDefaultsSectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewReplaceDefaultsSectionAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReplaceDefaultsSectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReplaceDefaultsSectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewReplaceDefaultsSectionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReplaceDefaultsSectionOK creates a ReplaceDefaultsSectionOK with default headers values
func NewReplaceDefaultsSectionOK() *ReplaceDefaultsSectionOK {
	return &ReplaceDefaultsSectionOK{}
}

/*
ReplaceDefaultsSectionOK describes a response with status code 200, with default header values.

Defaults section replaced
*/
type ReplaceDefaultsSectionOK struct {
	Payload *models.Defaults
}

// IsSuccess returns true when this replace defaults section o k response has a 2xx status code
func (o *ReplaceDefaultsSectionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this replace defaults section o k response has a 3xx status code
func (o *ReplaceDefaultsSectionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace defaults section o k response has a 4xx status code
func (o *ReplaceDefaultsSectionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this replace defaults section o k response has a 5xx status code
func (o *ReplaceDefaultsSectionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this replace defaults section o k response a status code equal to that given
func (o *ReplaceDefaultsSectionOK) IsCode(code int) bool {
	return code == 200
}

func (o *ReplaceDefaultsSectionOK) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/named_defaults/{name}][%d] replaceDefaultsSectionOK  %+v", 200, o.Payload)
}

func (o *ReplaceDefaultsSectionOK) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/named_defaults/{name}][%d] replaceDefaultsSectionOK  %+v", 200, o.Payload)
}

func (o *ReplaceDefaultsSectionOK) GetPayload() *models.Defaults {
	return o.Payload
}

func (o *ReplaceDefaultsSectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Defaults)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceDefaultsSectionAccepted creates a ReplaceDefaultsSectionAccepted with default headers values
func NewReplaceDefaultsSectionAccepted() *ReplaceDefaultsSectionAccepted {
	return &ReplaceDefaultsSectionAccepted{}
}

/*
ReplaceDefaultsSectionAccepted describes a response with status code 202, with default header values.

Configuration change accepted and reload requested
*/
type ReplaceDefaultsSectionAccepted struct {

	/* ID of the requested reload
	 */
	ReloadID string

	Payload *models.Defaults
}

// IsSuccess returns true when this replace defaults section accepted response has a 2xx status code
func (o *ReplaceDefaultsSectionAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this replace defaults section accepted response has a 3xx status code
func (o *ReplaceDefaultsSectionAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace defaults section accepted response has a 4xx status code
func (o *ReplaceDefaultsSectionAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this replace defaults section accepted response has a 5xx status code
func (o *ReplaceDefaultsSectionAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this replace defaults section accepted response a status code equal to that given
func (o *ReplaceDefaultsSectionAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *ReplaceDefaultsSectionAccepted) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/named_defaults/{name}][%d] replaceDefaultsSectionAccepted  %+v", 202, o.Payload)
}

func (o *ReplaceDefaultsSectionAccepted) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/named_defaults/{name}][%d] replaceDefaultsSectionAccepted  %+v", 202, o.Payload)
}

func (o *ReplaceDefaultsSectionAccepted) GetPayload() *models.Defaults {
	return o.Payload
}

func (o *ReplaceDefaultsSectionAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Reload-ID
	hdrReloadID := response.GetHeader("Reload-ID")

	if hdrReloadID != "" {
		o.ReloadID = hdrReloadID
	}

	o.Payload = new(models.Defaults)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceDefaultsSectionBadRequest creates a ReplaceDefaultsSectionBadRequest with default headers values
func NewReplaceDefaultsSectionBadRequest() *ReplaceDefaultsSectionBadRequest {
	return &ReplaceDefaultsSectionBadRequest{}
}

/*
ReplaceDefaultsSectionBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ReplaceDefaultsSectionBadRequest struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this replace defaults section bad request response has a 2xx status code
func (o *ReplaceDefaultsSectionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replace defaults section bad request response has a 3xx status code
func (o *ReplaceDefaultsSectionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace defaults section bad request response has a 4xx status code
func (o *ReplaceDefaultsSectionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this replace defaults section bad request response has a 5xx status code
func (o *ReplaceDefaultsSectionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this replace defaults section bad request response a status code equal to that given
func (o *ReplaceDefaultsSectionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ReplaceDefaultsSectionBadRequest) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/named_defaults/{name}][%d] replaceDefaultsSectionBadRequest  %+v", 400, o.Payload)
}

func (o *ReplaceDefaultsSectionBadRequest) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/named_defaults/{name}][%d] replaceDefaultsSectionBadRequest  %+v", 400, o.Payload)
}

func (o *ReplaceDefaultsSectionBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReplaceDefaultsSectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceDefaultsSectionNotFound creates a ReplaceDefaultsSectionNotFound with default headers values
func NewReplaceDefaultsSectionNotFound() *ReplaceDefaultsSectionNotFound {
	return &ReplaceDefaultsSectionNotFound{}
}

/*
ReplaceDefaultsSectionNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type ReplaceDefaultsSectionNotFound struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this replace defaults section not found response has a 2xx status code
func (o *ReplaceDefaultsSectionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replace defaults section not found response has a 3xx status code
func (o *ReplaceDefaultsSectionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace defaults section not found response has a 4xx status code
func (o *ReplaceDefaultsSectionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this replace defaults section not found response has a 5xx status code
func (o *ReplaceDefaultsSectionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this replace defaults section not found response a status code equal to that given
func (o *ReplaceDefaultsSectionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ReplaceDefaultsSectionNotFound) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/named_defaults/{name}][%d] replaceDefaultsSectionNotFound  %+v", 404, o.Payload)
}

func (o *ReplaceDefaultsSectionNotFound) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/named_defaults/{name}][%d] replaceDefaultsSectionNotFound  %+v", 404, o.Payload)
}

func (o *ReplaceDefaultsSectionNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReplaceDefaultsSectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceDefaultsSectionDefault creates a ReplaceDefaultsSectionDefault with default headers values
func NewReplaceDefaultsSectionDefault(code int) *ReplaceDefaultsSectionDefault {
	return &ReplaceDefaultsSectionDefault{
		_statusCode: code,
	}
}

/*
ReplaceDefaultsSectionDefault describes a response with status code -1, with default header values.

General Error
*/
type ReplaceDefaultsSectionDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// Code gets the status code for the replace defaults section default response
func (o *ReplaceDefaultsSectionDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this replace defaults section default response has a 2xx status code
func (o *ReplaceDefaultsSectionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this replace defaults section default response has a 3xx status code
func (o *ReplaceDefaultsSectionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this replace defaults section default response has a 4xx status code
func (o *ReplaceDefaultsSectionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this replace defaults section default response has a 5xx status code
func (o *ReplaceDefaultsSectionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this replace defaults section default response a status code equal to that given
func (o *ReplaceDefaultsSectionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ReplaceDefaultsSectionDefault) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/named_defaults/{name}][%d] replaceDefaultsSection default  %+v", o._statusCode, o.Payload)
}

func (o *ReplaceDefaultsSectionDefault) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/configuration/named_defaults/{name}][%d] replaceDefaultsSection default  %+v", o._statusCode, o.Payload)
}

func (o *ReplaceDefaultsSectionDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReplaceDefaultsSectionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
