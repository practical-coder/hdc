// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haproxytech/client-native/v5/models"
)

// DeleteStorageSSLCertificateReader is a Reader for the DeleteStorageSSLCertificate structure.
type DeleteStorageSSLCertificateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteStorageSSLCertificateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewDeleteStorageSSLCertificateAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteStorageSSLCertificateNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteStorageSSLCertificateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteStorageSSLCertificateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteStorageSSLCertificateAccepted creates a DeleteStorageSSLCertificateAccepted with default headers values
func NewDeleteStorageSSLCertificateAccepted() *DeleteStorageSSLCertificateAccepted {
	return &DeleteStorageSSLCertificateAccepted{}
}

/*
DeleteStorageSSLCertificateAccepted describes a response with status code 202, with default header values.

SSL certificate deleted and reload requested
*/
type DeleteStorageSSLCertificateAccepted struct {

	/* ID of the requested reload
	 */
	ReloadID string
}

// IsSuccess returns true when this delete storage s s l certificate accepted response has a 2xx status code
func (o *DeleteStorageSSLCertificateAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete storage s s l certificate accepted response has a 3xx status code
func (o *DeleteStorageSSLCertificateAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete storage s s l certificate accepted response has a 4xx status code
func (o *DeleteStorageSSLCertificateAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete storage s s l certificate accepted response has a 5xx status code
func (o *DeleteStorageSSLCertificateAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this delete storage s s l certificate accepted response a status code equal to that given
func (o *DeleteStorageSSLCertificateAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the delete storage s s l certificate accepted response
func (o *DeleteStorageSSLCertificateAccepted) Code() int {
	return 202
}

func (o *DeleteStorageSSLCertificateAccepted) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/storage/ssl_certificates/{name}][%d] deleteStorageSSLCertificateAccepted ", 202)
}

func (o *DeleteStorageSSLCertificateAccepted) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/storage/ssl_certificates/{name}][%d] deleteStorageSSLCertificateAccepted ", 202)
}

func (o *DeleteStorageSSLCertificateAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Reload-ID
	hdrReloadID := response.GetHeader("Reload-ID")

	if hdrReloadID != "" {
		o.ReloadID = hdrReloadID
	}

	return nil
}

// NewDeleteStorageSSLCertificateNoContent creates a DeleteStorageSSLCertificateNoContent with default headers values
func NewDeleteStorageSSLCertificateNoContent() *DeleteStorageSSLCertificateNoContent {
	return &DeleteStorageSSLCertificateNoContent{}
}

/*
DeleteStorageSSLCertificateNoContent describes a response with status code 204, with default header values.

SSL certificate deleted
*/
type DeleteStorageSSLCertificateNoContent struct {
}

// IsSuccess returns true when this delete storage s s l certificate no content response has a 2xx status code
func (o *DeleteStorageSSLCertificateNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete storage s s l certificate no content response has a 3xx status code
func (o *DeleteStorageSSLCertificateNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete storage s s l certificate no content response has a 4xx status code
func (o *DeleteStorageSSLCertificateNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete storage s s l certificate no content response has a 5xx status code
func (o *DeleteStorageSSLCertificateNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete storage s s l certificate no content response a status code equal to that given
func (o *DeleteStorageSSLCertificateNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete storage s s l certificate no content response
func (o *DeleteStorageSSLCertificateNoContent) Code() int {
	return 204
}

func (o *DeleteStorageSSLCertificateNoContent) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/storage/ssl_certificates/{name}][%d] deleteStorageSSLCertificateNoContent ", 204)
}

func (o *DeleteStorageSSLCertificateNoContent) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/storage/ssl_certificates/{name}][%d] deleteStorageSSLCertificateNoContent ", 204)
}

func (o *DeleteStorageSSLCertificateNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteStorageSSLCertificateNotFound creates a DeleteStorageSSLCertificateNotFound with default headers values
func NewDeleteStorageSSLCertificateNotFound() *DeleteStorageSSLCertificateNotFound {
	return &DeleteStorageSSLCertificateNotFound{}
}

/*
DeleteStorageSSLCertificateNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type DeleteStorageSSLCertificateNotFound struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this delete storage s s l certificate not found response has a 2xx status code
func (o *DeleteStorageSSLCertificateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete storage s s l certificate not found response has a 3xx status code
func (o *DeleteStorageSSLCertificateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete storage s s l certificate not found response has a 4xx status code
func (o *DeleteStorageSSLCertificateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete storage s s l certificate not found response has a 5xx status code
func (o *DeleteStorageSSLCertificateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete storage s s l certificate not found response a status code equal to that given
func (o *DeleteStorageSSLCertificateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete storage s s l certificate not found response
func (o *DeleteStorageSSLCertificateNotFound) Code() int {
	return 404
}

func (o *DeleteStorageSSLCertificateNotFound) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/storage/ssl_certificates/{name}][%d] deleteStorageSSLCertificateNotFound  %+v", 404, o.Payload)
}

func (o *DeleteStorageSSLCertificateNotFound) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/storage/ssl_certificates/{name}][%d] deleteStorageSSLCertificateNotFound  %+v", 404, o.Payload)
}

func (o *DeleteStorageSSLCertificateNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteStorageSSLCertificateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteStorageSSLCertificateDefault creates a DeleteStorageSSLCertificateDefault with default headers values
func NewDeleteStorageSSLCertificateDefault(code int) *DeleteStorageSSLCertificateDefault {
	return &DeleteStorageSSLCertificateDefault{
		_statusCode: code,
	}
}

/*
DeleteStorageSSLCertificateDefault describes a response with status code -1, with default header values.

General Error
*/
type DeleteStorageSSLCertificateDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this delete storage s s l certificate default response has a 2xx status code
func (o *DeleteStorageSSLCertificateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete storage s s l certificate default response has a 3xx status code
func (o *DeleteStorageSSLCertificateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete storage s s l certificate default response has a 4xx status code
func (o *DeleteStorageSSLCertificateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete storage s s l certificate default response has a 5xx status code
func (o *DeleteStorageSSLCertificateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete storage s s l certificate default response a status code equal to that given
func (o *DeleteStorageSSLCertificateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete storage s s l certificate default response
func (o *DeleteStorageSSLCertificateDefault) Code() int {
	return o._statusCode
}

func (o *DeleteStorageSSLCertificateDefault) Error() string {
	return fmt.Sprintf("[DELETE /services/haproxy/storage/ssl_certificates/{name}][%d] deleteStorageSSLCertificate default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteStorageSSLCertificateDefault) String() string {
	return fmt.Sprintf("[DELETE /services/haproxy/storage/ssl_certificates/{name}][%d] deleteStorageSSLCertificate default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteStorageSSLCertificateDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteStorageSSLCertificateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
