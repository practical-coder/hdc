// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haproxytech/client-native/v4/models"
)

// ReplaceSiteReader is a Reader for the ReplaceSite structure.
type ReplaceSiteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceSiteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplaceSiteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewReplaceSiteAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReplaceSiteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReplaceSiteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewReplaceSiteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReplaceSiteOK creates a ReplaceSiteOK with default headers values
func NewReplaceSiteOK() *ReplaceSiteOK {
	return &ReplaceSiteOK{}
}

/*
ReplaceSiteOK describes a response with status code 200, with default header values.

Site replaced
*/
type ReplaceSiteOK struct {
	Payload *models.Site
}

// IsSuccess returns true when this replace site o k response has a 2xx status code
func (o *ReplaceSiteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this replace site o k response has a 3xx status code
func (o *ReplaceSiteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace site o k response has a 4xx status code
func (o *ReplaceSiteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this replace site o k response has a 5xx status code
func (o *ReplaceSiteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this replace site o k response a status code equal to that given
func (o *ReplaceSiteOK) IsCode(code int) bool {
	return code == 200
}

func (o *ReplaceSiteOK) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/sites/{name}][%d] replaceSiteOK  %+v", 200, o.Payload)
}

func (o *ReplaceSiteOK) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/sites/{name}][%d] replaceSiteOK  %+v", 200, o.Payload)
}

func (o *ReplaceSiteOK) GetPayload() *models.Site {
	return o.Payload
}

func (o *ReplaceSiteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Site)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceSiteAccepted creates a ReplaceSiteAccepted with default headers values
func NewReplaceSiteAccepted() *ReplaceSiteAccepted {
	return &ReplaceSiteAccepted{}
}

/*
ReplaceSiteAccepted describes a response with status code 202, with default header values.

Configuration change accepted and reload requested
*/
type ReplaceSiteAccepted struct {

	/* ID of the requested reload
	 */
	ReloadID string

	Payload *models.Site
}

// IsSuccess returns true when this replace site accepted response has a 2xx status code
func (o *ReplaceSiteAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this replace site accepted response has a 3xx status code
func (o *ReplaceSiteAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace site accepted response has a 4xx status code
func (o *ReplaceSiteAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this replace site accepted response has a 5xx status code
func (o *ReplaceSiteAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this replace site accepted response a status code equal to that given
func (o *ReplaceSiteAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *ReplaceSiteAccepted) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/sites/{name}][%d] replaceSiteAccepted  %+v", 202, o.Payload)
}

func (o *ReplaceSiteAccepted) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/sites/{name}][%d] replaceSiteAccepted  %+v", 202, o.Payload)
}

func (o *ReplaceSiteAccepted) GetPayload() *models.Site {
	return o.Payload
}

func (o *ReplaceSiteAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Reload-ID
	hdrReloadID := response.GetHeader("Reload-ID")

	if hdrReloadID != "" {
		o.ReloadID = hdrReloadID
	}

	o.Payload = new(models.Site)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceSiteBadRequest creates a ReplaceSiteBadRequest with default headers values
func NewReplaceSiteBadRequest() *ReplaceSiteBadRequest {
	return &ReplaceSiteBadRequest{}
}

/*
ReplaceSiteBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ReplaceSiteBadRequest struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this replace site bad request response has a 2xx status code
func (o *ReplaceSiteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replace site bad request response has a 3xx status code
func (o *ReplaceSiteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace site bad request response has a 4xx status code
func (o *ReplaceSiteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this replace site bad request response has a 5xx status code
func (o *ReplaceSiteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this replace site bad request response a status code equal to that given
func (o *ReplaceSiteBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ReplaceSiteBadRequest) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/sites/{name}][%d] replaceSiteBadRequest  %+v", 400, o.Payload)
}

func (o *ReplaceSiteBadRequest) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/sites/{name}][%d] replaceSiteBadRequest  %+v", 400, o.Payload)
}

func (o *ReplaceSiteBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReplaceSiteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceSiteNotFound creates a ReplaceSiteNotFound with default headers values
func NewReplaceSiteNotFound() *ReplaceSiteNotFound {
	return &ReplaceSiteNotFound{}
}

/*
ReplaceSiteNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type ReplaceSiteNotFound struct {

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// IsSuccess returns true when this replace site not found response has a 2xx status code
func (o *ReplaceSiteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replace site not found response has a 3xx status code
func (o *ReplaceSiteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replace site not found response has a 4xx status code
func (o *ReplaceSiteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this replace site not found response has a 5xx status code
func (o *ReplaceSiteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this replace site not found response a status code equal to that given
func (o *ReplaceSiteNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ReplaceSiteNotFound) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/sites/{name}][%d] replaceSiteNotFound  %+v", 404, o.Payload)
}

func (o *ReplaceSiteNotFound) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/sites/{name}][%d] replaceSiteNotFound  %+v", 404, o.Payload)
}

func (o *ReplaceSiteNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReplaceSiteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceSiteDefault creates a ReplaceSiteDefault with default headers values
func NewReplaceSiteDefault(code int) *ReplaceSiteDefault {
	return &ReplaceSiteDefault{
		_statusCode: code,
	}
}

/*
ReplaceSiteDefault describes a response with status code -1, with default header values.

General Error
*/
type ReplaceSiteDefault struct {
	_statusCode int

	/* Configuration file version
	 */
	ConfigurationVersion string

	Payload *models.Error
}

// Code gets the status code for the replace site default response
func (o *ReplaceSiteDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this replace site default response has a 2xx status code
func (o *ReplaceSiteDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this replace site default response has a 3xx status code
func (o *ReplaceSiteDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this replace site default response has a 4xx status code
func (o *ReplaceSiteDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this replace site default response has a 5xx status code
func (o *ReplaceSiteDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this replace site default response a status code equal to that given
func (o *ReplaceSiteDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ReplaceSiteDefault) Error() string {
	return fmt.Sprintf("[PUT /services/haproxy/sites/{name}][%d] replaceSite default  %+v", o._statusCode, o.Payload)
}

func (o *ReplaceSiteDefault) String() string {
	return fmt.Sprintf("[PUT /services/haproxy/sites/{name}][%d] replaceSite default  %+v", o._statusCode, o.Payload)
}

func (o *ReplaceSiteDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *ReplaceSiteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Configuration-Version
	hdrConfigurationVersion := response.GetHeader("Configuration-Version")

	if hdrConfigurationVersion != "" {
		o.ConfigurationVersion = hdrConfigurationVersion
	}

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
